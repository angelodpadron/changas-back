plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.4'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'jacoco'
	id "com.github.kt3k.coveralls" version "2.12.2"
}

group = 'com.changas'
version = '0.0.1-SNAPSHOT'
description = 'API de Changas para TTIP'

java {
	sourceCompatibility = '21'
}

jacoco {
	toolVersion = "0.8.11"
}

coveralls {
	jacocoReportPath = file("build/reports/jacoco/test/jacocoTestReport.xml")
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.2.4'
	implementation 'org.springframework.boot:spring-boot-starter-security:3.2.4'
	implementation 'org.springframework.boot:spring-boot-starter-validation:3.3.0'
	implementation 'org.postgresql:postgresql:42.7.3'
	implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
	implementation 'org.hibernate.orm:hibernate-spatial:6.5.2.Final'
	implementation 'org.locationtech.jts:jts-core:1.19.0'
	implementation 'org.wololo:jts2geojson:0.18.1'


	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5'

	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.4.0'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'com.h2database:h2:2.2.224'
	compileOnly 'org.projectlombok:lombok:1.18.32'
	annotationProcessor 'org.projectlombok:lombok:1.18.32'

}

tasks.named('test') {
	useJUnitPlatform()
}

test {
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test
	reports {
		csv.required = false
		html.required = false
		xml.required = true
	}
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
			        "**/config/**"
			])
		}))
	}
}

check.dependsOn jacocoTestReport
